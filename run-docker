#!/bin/bash

set -e

FILE=`realpath $1`

if [ $3 == 1 ]; then
    OPTIM="-O1"
elif [ $3 == 2 ]; then
    OPTIM="-O2"
elif [ $3 == 3 ]; then
    OPTIM="-O3"
fi

if [ $4 == 11 ]; then
    VERSION="-std=c++11"
elif [ $4 == 14 ]; then
    VERSION="-std=c++14"
elif [ $4 == 17 ]; then
    VERSION="-std=c++1z"
else
    VERSION="-std=c++98 -Werror=c++11-extensions"
fi

LOCK=$FILE.lock
lockfile $LOCK
INFILE=$FILE.cpp
OUTFILE=$FILE.out
CIDFILE=$FILE.cid
PERFFILE=$FILE.perf
if [ $5 ] && [ -f $OUTFILE ]; then
    rm $OUTFILE
fi
if [ -f $OUTFILE ]; then
    >&2 echo "Results already in cache, resending..."
else
    touch $OUTFILE
    chmod 666 $OUTFILE
    touch $PERFFILE
    chmod 666 $PERFFILE
    docker run --security-opt seccomp=seccomp.json --rm -v $INFILE:/home/builder/bench-file.cpp -v $PERFFILE:/home/builder/bench.perf --memory="100m" --cpu-period=100000 --cpu-quota=25000 --cidfile=$CIDFILE -v $OUTFILE:/home/builder/bench.out -t bench-runner /bin/bash -c "clang++-3.8 $OPTIM $VERSION bench-file.cpp -o bench /usr/local/lib/libbenchmark.a -lpthread && perf record -g ./bench --benchmark_format=json --benchmark_out=/home/builder/bench.out && perf report -g 'fractal,0,caller' > bench.perf"
    rm $CIDFILE
fi

rm -f $LOCK
